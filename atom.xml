<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>learner66的探索空间</title>
  
  <subtitle>启航，探索未知之地</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://learner66.github.io/"/>
  <updated>2018-07-12T07:45:20.257Z</updated>
  <id>https://learner66.github.io/</id>
  
  <author>
    <name>learner66</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>网络之TCP/UDP漫游</title>
    <link href="https://learner66.github.io/2018/07/11/network-tcp-udp/"/>
    <id>https://learner66.github.io/2018/07/11/network-tcp-udp/</id>
    <published>2018-07-11T06:32:14.000Z</published>
    <updated>2018-07-12T07:45:20.257Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;可靠传输的TCP&quot;&gt;&lt;a href=&quot;#可靠传输的TCP&quot; class=&quot;headerlink&quot; title=&quot;可靠传输的TCP&quot;&gt;&lt;/a&gt;可靠传输的TCP&lt;/h2&gt;&lt;p&gt;TCP的可靠传输靠什么保证的，TCP可靠传输面临什么问题，TCP的连接和断开。&lt;br&gt;TCP
      
    
    </summary>
    
      <category term="计算机网络" scheme="https://learner66.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="TCP" scheme="https://learner66.github.io/tags/TCP/"/>
    
      <category term="UDP" scheme="https://learner66.github.io/tags/UDP/"/>
    
  </entry>
  
  <entry>
    <title>磁盘IO的工作机制</title>
    <link href="https://learner66.github.io/2018/07/10/Disk-IO/"/>
    <id>https://learner66.github.io/2018/07/10/Disk-IO/</id>
    <published>2018-07-10T02:05:57.000Z</published>
    <updated>2018-07-10T11:43:39.363Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;磁盘IO的工作机制&quot;&gt;&lt;a href=&quot;#磁盘IO的工作机制&quot; class=&quot;headerlink&quot; title=&quot;磁盘IO的工作机制&quot;&gt;&lt;/a&gt;磁盘IO的工作机制&lt;/h2&gt;&lt;p&gt;需要搞清的问题，磁盘IO怎么工作的，IO的控制方式有哪几种。&lt;br&gt;为什么需要对磁盘
      
    
    </summary>
    
      <category term="操作系统" scheme="https://learner66.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="磁盘" scheme="https://learner66.github.io/tags/%E7%A3%81%E7%9B%98/"/>
    
      <category term="IO" scheme="https://learner66.github.io/tags/IO/"/>
    
      <category term="IO控制方式" scheme="https://learner66.github.io/tags/IO%E6%8E%A7%E5%88%B6%E6%96%B9%E5%BC%8F/"/>
    
      <category term="IO工作机制" scheme="https://learner66.github.io/tags/IO%E5%B7%A5%E4%BD%9C%E6%9C%BA%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>java对象的生存周期</title>
    <link href="https://learner66.github.io/2018/07/09/java-object/"/>
    <id>https://learner66.github.io/2018/07/09/java-object/</id>
    <published>2018-07-09T07:46:51.000Z</published>
    <updated>2018-07-09T12:59:34.509Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;java对象的生存&quot;&gt;&lt;a href=&quot;#java对象的生存&quot; class=&quot;headerlink&quot; title=&quot;java对象的生存&quot;&gt;&lt;/a&gt;java对象的生存&lt;/h2&gt;&lt;p&gt;对于java对象的生存问题，需要考虑的是，java对象在哪生存，java对象生存时间
      
    
    </summary>
    
      <category term="java" scheme="https://learner66.github.io/categories/java/"/>
    
    
      <category term="java" scheme="https://learner66.github.io/tags/java/"/>
    
      <category term="栈" scheme="https://learner66.github.io/tags/%E6%A0%88/"/>
    
      <category term="堆" scheme="https://learner66.github.io/tags/%E5%A0%86/"/>
    
  </entry>
  
  <entry>
    <title>操作系统-进程通信</title>
    <link href="https://learner66.github.io/2018/06/01/os-process-communication/"/>
    <id>https://learner66.github.io/2018/06/01/os-process-communication/</id>
    <published>2018-06-01T12:03:02.000Z</published>
    <updated>2018-06-01T12:05:18.889Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;进程通信&quot;&gt;&lt;a href=&quot;#进程通信&quot; class=&quot;headerlink&quot; title=&quot;进程通信&quot;&gt;&lt;/a&gt;进程通信&lt;/h2&gt;&lt;p&gt;（1）一个进程如何把信息传递给另一个&lt;br&gt;（2）两个或多个进程的活动不会交叉&lt;br&gt;（3）正确的顺序&lt;/p&gt;

      
    
    </summary>
    
      <category term="操作系统" scheme="https://learner66.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="操作系统" scheme="https://learner66.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="进程通信" scheme="https://learner66.github.io/tags/%E8%BF%9B%E7%A8%8B%E9%80%9A%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>操作系统的主要功能</title>
    <link href="https://learner66.github.io/2018/06/01/os-process-1/"/>
    <id>https://learner66.github.io/2018/06/01/os-process-1/</id>
    <published>2018-06-01T02:20:56.000Z</published>
    <updated>2018-06-01T07:29:14.660Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;处理机管理功能&quot;&gt;&lt;a href=&quot;#处理机管理功能&quot; class=&quot;headerlink&quot; title=&quot;处理机管理功能&quot;&gt;&lt;/a&gt;处理机管理功能&lt;/h2&gt;&lt;p&gt;  在传统的多道程序系统中，处理机的分配和运行都是以进程为基本单位，因而对处理机的&lt;br&gt;管理可归结
      
    
    </summary>
    
      <category term="操作系统" scheme="https://learner66.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="操作系统" scheme="https://learner66.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>操作系统-进程</title>
    <link href="https://learner66.github.io/2018/05/30/os-process/"/>
    <id>https://learner66.github.io/2018/05/30/os-process/</id>
    <published>2018-05-30T07:45:53.000Z</published>
    <updated>2018-06-01T12:00:19.084Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;进程&quot;&gt;&lt;a href=&quot;#进程&quot; class=&quot;headerlink&quot; title=&quot;进程&quot;&gt;&lt;/a&gt;进程&lt;/h2&gt;&lt;p&gt;进程是正在执行程序的实例，包括程序计算机，寄存器和变量。&lt;/p&gt;
&lt;p&gt;从概念上说，每个进程都有自己的虚拟CPU，当然，实际的CPU是在进程
      
    
    </summary>
    
      <category term="操作系统" scheme="https://learner66.github.io/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="操作系统" scheme="https://learner66.github.io/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="进程" scheme="https://learner66.github.io/tags/%E8%BF%9B%E7%A8%8B/"/>
    
      <category term="线程" scheme="https://learner66.github.io/tags/%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>git学习（二）</title>
    <link href="https://learner66.github.io/2018/05/22/git-learning-2/"/>
    <id>https://learner66.github.io/2018/05/22/git-learning-2/</id>
    <published>2018-05-22T11:29:06.000Z</published>
    <updated>2018-06-01T07:40:49.623Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;工作区和暂存区&quot;&gt;&lt;a href=&quot;#工作区和暂存区&quot; class=&quot;headerlink&quot; title=&quot;工作区和暂存区&quot;&gt;&lt;/a&gt;工作区和暂存区&lt;/h2&gt;&lt;p&gt;  git设计中有一些概念，了解这些概念对于深入学习git有很大的帮助。其中就有工作区&lt;br&gt;和暂存
      
    
    </summary>
    
      <category term="git" scheme="https://learner66.github.io/categories/git/"/>
    
    
      <category term="git" scheme="https://learner66.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>git学习（一）</title>
    <link href="https://learner66.github.io/2018/05/22/git-learning-1/"/>
    <id>https://learner66.github.io/2018/05/22/git-learning-1/</id>
    <published>2018-05-22T08:48:18.000Z</published>
    <updated>2018-06-01T07:40:47.939Z</updated>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;git是什么&quot;&gt;&lt;a href=&quot;#git是什么&quot; class=&quot;headerlink&quot; title=&quot;git是什么&quot;&gt;&lt;/a&gt;git是什么&lt;/h2&gt;&lt;p&gt;  git是一种版本控制工具，它的诞生是因为linux日益增长，代码合并依靠手工已经非常吃力。&lt;br&gt;一开始
      
    
    </summary>
    
      <category term="git" scheme="https://learner66.github.io/categories/git/"/>
    
    
      <category term="git" scheme="https://learner66.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>flask-web的思维导图</title>
    <link href="https://learner66.github.io/2018/05/20/flask-web/"/>
    <id>https://learner66.github.io/2018/05/20/flask-web/</id>
    <published>2018-05-20T11:29:06.000Z</published>
    <updated>2018-06-01T07:29:11.472Z</updated>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简单展示flask-web的框架，后面会用详细的文章来阐述这幅图。&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;
      
    
    </summary>
    
      <category term="flask-web" scheme="https://learner66.github.io/categories/flask-web/"/>
    
    
  </entry>
  
</feed>
